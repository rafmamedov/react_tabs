{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isTabActive","tabId","index","some","id","selectedTabContent","find","content","className","map","tab","classNames","href","onClick","handleTabSelect","title","App","useState","setSelectedTab","useEffect","selectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAA2B,SAAC,GAIlC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQMC,EAAc,SAACC,EAAeC,GAAhB,OAClBD,IAAUH,IACLD,EAAKM,MAAK,qBAAGC,KAAiBN,MAA6B,IAAVI,GAGlDG,EAAkB,UACpBR,EAAKS,MAAK,qBAAGF,KAAgBN,YADT,aACpB,EAA6CS,QAEjD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGX,EAAKY,KAAI,SAACC,EAAKR,GAAN,OACR,oBAEEM,UAAWG,IAAW,CACpB,YAAaX,EAAYU,EAAIN,GAAIF,KAEnC,UAAQ,MALV,SAOE,mBACEU,KAAI,WAAMF,EAAIN,IACd,UAAQ,UACRS,QAAS,kBA7BC,SAACH,GACnBA,EAAIN,KAAON,GACbC,EAAcW,GA2BWI,CAAgBJ,IAHjC,SAKGA,EAAIK,SAXFL,EAAIN,WAkBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QCrDIR,EAAO,CAClB,CAAEO,GAAI,QAASW,MAAO,QAASR,QAAS,eACxC,CAAEH,GAAI,QAASW,MAAO,QAASR,QAAS,eACxC,CAAEH,GAAI,QAASW,MAAO,QAASR,QAAS,gBAG7BS,EAAgB,WAAO,IAAD,EACjC,EAAwCC,mBAASpB,EAAK,GAAGO,IAAzD,mBAAON,EAAP,KAAsBoB,EAAtB,KAEAC,qBAAU,WACHtB,EAAKM,MAAK,qBAAGC,KAAiBN,MACjCoB,EAAerB,EAAK,GAAGO,MAExB,CAACN,IAEJ,IAIMsB,EAAgB,UAAGvB,EACtBS,MAAK,qBAAGF,KAAgBN,YADL,aAAG,EACkBiB,MAE3C,OACE,sBAAKP,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,KAGtB,cAAC,EAAD,CACEvB,KAAMA,EACNC,cAAeA,EACfC,cAhBgB,SAAC,GAAiB,IAAfK,EAAc,EAAdA,GACvBc,EAAed,UCnBnBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.804f46fb.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport interface TabsType {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (arg: Tab) => void;\n}\n\nexport type Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\nexport const Tabs: React.FC<TabsType> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabSelect = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const isTabActive = (tabId: string, index: number) => (\n    tabId === selectedTabId\n    || (!tabs.some(({ id }) => (id === selectedTabId)) && index === 0)\n  );\n\n  const selectedTabContent\n    = tabs.find(({ id }) => id === selectedTabId)?.content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': isTabActive(tab.id, index),\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState(tabs[0].id);\n\n  useEffect(() => {\n    if (!tabs.some(({ id }) => (id === selectedTabId))) {\n      setSelectedTab(tabs[0].id);\n    }\n  }, [selectedTabId]);\n\n  const onTabSelected = ({ id }: Tab) => {\n    setSelectedTab(id);\n  };\n\n  const selectedTabTitle = tabs\n    .find(({ id }) => id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}