{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isTabActive","id","index","some","tab","selectedTabContent","find","content","className","map","classNames","href","onClick","handleTabSelect","title","App","useState","setSelectedTab","useEffect","selectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAA2B,SAAC,GAIlC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQMC,EAAc,SAACC,EAAYC,GAAb,OAClBD,IAAOH,IACFD,EAAKM,MAAK,SAAAC,GAAG,OAAKA,EAAIH,KAAOH,MAA6B,IAAVI,GAGjDG,EAAkB,UACpBR,EAAKS,MAAK,SAAAF,GAAG,OAAIA,EAAIH,KAAOH,YADR,aACpB,EAA4CS,QAEhD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGX,EAAKY,KAAI,SAACL,EAAKF,GAAN,OACR,oBAEEM,UAAWE,IAAW,CACpB,YAAaV,EAAYI,EAAIH,GAAIC,KAEnC,UAAQ,MALV,SAOE,mBACES,KAAI,WAAMP,EAAIH,IACd,UAAQ,UACRW,QAAS,kBA7BC,SAACR,GACnBA,EAAIH,KAAOH,GACbC,EAAcK,GA2BWS,CAAgBT,IAHjC,SAKGA,EAAIU,SAXFV,EAAIH,WAkBjB,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QCrDIR,EAAO,CAClB,CAAEI,GAAI,QAASa,MAAO,QAASP,QAAS,eACxC,CAAEN,GAAI,QAASa,MAAO,QAASP,QAAS,eACxC,CAAEN,GAAI,QAASa,MAAO,QAASP,QAAS,gBAG7BQ,EAAgB,WAAO,IAAD,EACjC,EAAwCC,mBAASnB,EAAK,GAAGI,IAAzD,mBAAOH,EAAP,KAAsBmB,EAAtB,KAEAC,qBAAU,WACHrB,EAAKM,MAAK,SAAAC,GAAG,OAAKA,EAAIH,KAAOH,MAChCmB,EAAepB,EAAK,GAAGI,MAExB,CAACH,IAEJ,IAIMqB,EAAgB,UAAGtB,EAAKS,MAAK,SAAAF,GAAG,OAAIA,EAAIH,KAAOH,YAA/B,aAAG,EAA4CgB,MAErE,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,KAGtB,cAAC,EAAD,CACEtB,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACK,GACrBa,EAAeb,EAAIH,WCnBvBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.24fc6136.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport interface TabsType {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (arg: Tab) => void;\n}\n\nexport type Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\nexport const Tabs: React.FC<TabsType> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabSelect = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const isTabActive = (id: string, index: number) => (\n    id === selectedTabId\n    || (!tabs.some(tab => (tab.id === selectedTabId)) && index === 0)\n  );\n\n  const selectedTabContent\n    = tabs.find(tab => tab.id === selectedTabId)?.content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': isTabActive(tab.id, index),\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState(tabs[0].id);\n\n  useEffect(() => {\n    if (!tabs.some(tab => (tab.id === selectedTabId))) {\n      setSelectedTab(tabs[0].id);\n    }\n  }, [selectedTabId]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab.id);\n  };\n\n  const selectedTabTitle = tabs.find(tab => tab.id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}